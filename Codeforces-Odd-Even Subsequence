#include <bits/stdc++.h>
using namespace   std;
#define boost     ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define ll        long long 
#define ld        long double
#define mkp       make_pair
#define pb           push_back    
#define pf           push_front
#define ff      first
#define ss      second
#define pii       pair<int,int>
#define glist      vector<pii >
#define rep(i,a,n) for(int i=a ; i<n ; i++)
#define pob       pop_back
#define pof       pop_front
#define mxy       map<pair<ll, ll>, ll>  
#define q1        1000000007
#define bin1      __builtin_popcount 
#define map2d      map<long long,map<long long , long long > >
#define um          unordered_map<ll,ll>
#define INF       0x3f3f3f3f
vector<int> a(200005);
int n,k;

bool check(int x)
{
    vector<int> b(n);
    rep(i,0,n)
    {
        if(a[i] > x) 
        b[i] = 1;
        else b[i] = 0;
    }
    vector<vector<int>> dp(n, vector<int>(2,0));
    if(b[0] == 0) 
    dp[0][0] = dp[0][1] = 1;
    else
    {
        dp[0][1] = 1;
        dp[0][0] = 0;
    }
    rep(i,1,n)
    {
        if(b[i] == 0)
        {
            dp[i][0] = max(dp[i-1][0], dp[i-1][1] + 1);
            dp[i][1] = max(dp[i-1][1], dp[i-1][0] + 1);
        }
        else
        {
            dp[i][1] = max(dp[i-1][1], dp[i-1][0] + 1);
        }
    }
    return (dp[n-1][0] >= k || dp[n-1][1] >= k);
}

int main()
{
        cin >> n >> k;
        int hi =0;
        rep(i,0,n){
        cin >> a[i];
        hi=max(a[i],hi);
    }
        int lo = 1;
        hi=hi+1;
        while(lo <= hi){
            int mid = (lo + hi) / 2;
            //cout<<mid<<endl;
            if(check(mid)) hi = mid-1;
            else  lo = mid+1;
        }
        cout << hi + 1 << endl;
    
}
Â 
